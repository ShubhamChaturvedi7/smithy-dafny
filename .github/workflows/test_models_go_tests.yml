# This workflow performs tests in Go.
name: Library Go tests

on:
  workflow_call:
    inputs:
      dafny:
        description: 'The Dafny version to run'
        required: true
        type: string

jobs:
  testJava:
    strategy:
      fail-fast: false
      matrix:
        library: [
          TestModels/dafny-dependencies/StandardLibrary, # This stores current Polymorph dependencies that all TestModels depend on
          # TestModels/Aggregate,
          # TestModels/AggregateReferences,
          TestModels/CodegenPatches,
          TestModels/Constraints,
          # TestModels/Constructor,
          # TestModels/Dependencies,
          TestModels/Errors,
          TestModels/Extendable,
          # TestModels/Extern,
          # TestModels/LanguageSpecificLogic,
          # TestModels/LocalService,
          # TestModels/MultipleModels,
          # TestModels/Refinement,
          # TestModels/Resource,
          TestModels/SimpleTypes/BigDecimal,
          TestModels/SimpleTypes/BigInteger,
          TestModels/SimpleTypes/SimpleBlob,
          TestModels/SimpleTypes/SimpleBoolean,
          TestModels/SimpleTypes/SimpleByte,
          TestModels/SimpleTypes/SimpleDouble,
          TestModels/SimpleTypes/SimpleEnum,
          TestModels/SimpleTypes/SimpleEnumV2,
          TestModels/SimpleTypes/SimpleFloat,
          TestModels/SimpleTypes/SimpleInteger,
          TestModels/SimpleTypes/SimpleLong,
          TestModels/SimpleTypes/SimpleShort,
          TestModels/SimpleTypes/SimpleString,
          TestModels/SimpleTypes/SimpleTimestamp,
          # TestModels/Union,
          # TestModels/aws-sdks/ddb,
          # TestModels/aws-sdks/kms,
        ]
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-PolymorphTestModels-Role-us-west-2
          role-session-name: JavaTests

      - uses: actions/checkout@v3

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.7.0
        with:
          dafny-version: ${{ inputs.dafny }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18' 

      - name: Setup smithy-dafny-conversion
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal
          build-root-directory: smithy-dafny-conversion

      - name: Setup Java 17 for codegen
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup dependencies
        working-directory: ./${{ matrix.library }}
        run: |
          make setup_prettier

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
  
      - name: Generate Polymorph Dafny and Go code
        shell: bash
        working-directory: ./${{ matrix.library }}
        # Use $DAFNY_VERSION from setup-dafny-action to handle nightlies correctly
        run: |
          #TODO: Create a command to do polymorph for Go only and change commands below.
          make polymorph_code_gen DAFNY_VERSION_OPTION="--dafny-version $DAFNY_VERSION"

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_go

      - name: Export GOPATH
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          export GOPATH=$(pwd)/runtimes/go/ImplementationFromDafny-go:$(pwd)/runtimes/go/TestsFromDafny-go

      - name: Run Go imports
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          goimports -w runtimes/go/

      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          GO111MODULE=auto go run runtimes/go/TestsFromDafny-go/src/TestsFromDafny.go