// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleunion

import (
	"github.com/Smithy-dafny/TestModels/Union/simpleunioninternaldafnytypes"
	"github.com/Smithy-dafny/TestModels/Union/simpleuniontypes"
	"github.com/dafny-lang/DafnyRuntimeGo/dafny"
	"fmt"
	// "reflect"
)

func DeferredPanicHandler() {
    if r := recover(); r != nil {
        fmt.Println("Recovered from panic:", r)
    }
}

func GetUnionInput_FromDafny(dafnyInput simpleunioninternaldafnytypes.GetUnionInput) simpleuniontypes.GetUnionInput {
	defer DeferredPanicHandler()
	var union simpleuniontypes.MyUnion
	if(((dafnyInput.Dtor_union()).Dtor_value().(simpleunioninternaldafnytypes.MyUnion)).Is_IntegerValue()) {
		union = &simpleuniontypes.MyUnionMemberIntegerValue{
			Value: (dafnyInput.Dtor_union().UnwrapOr(nil).(simpleunioninternaldafnytypes.MyUnion)).Dtor_IntegerValue(),
		}
	}
	if(((dafnyInput.Dtor_union()).Dtor_value().(simpleunioninternaldafnytypes.MyUnion)).Is_StringValue()) {
		union = &simpleuniontypes.MyUnionMemberIntegerValue{
			Value: (dafnyInput.Dtor_union().UnwrapOr(nil).(simpleunioninternaldafnytypes.MyUnion)).Dtor_IntegerValue(),
		}
	}
	return simpleuniontypes.GetUnionInput{Union: func() simpleuniontypes.MyUnion {
		return union
	}()}

}

func GetUnionOutput_FromDafny(dafnyOutput simpleunioninternaldafnytypes.GetUnionOutput) simpleuniontypes.GetUnionOutput {

	output := simpleuniontypes.GetUnionOutput{
        Union: &simpleuniontypes.MyUnionMemberIntegerValue{
            Value: 42,
        },
    }

    return output

}

func GetKnownValueUnionInput_FromDafny(dafnyInput simpleunioninternaldafnytypes.GetKnownValueUnionInput) simpleuniontypes.GetKnownValueUnionInput {

	knownValueUnion := &simpleuniontypes.KnownValueUnionMemberValue{
        Value: 42,
    }

    // Create a new instance of GetKnownValueUnionInput
    input := simpleuniontypes.GetKnownValueUnionInput{
        Union: knownValueUnion,
    }

    return input

}

func GetKnownValueUnionOutput_FromDafny(dafnyOutput simpleunioninternaldafnytypes.GetKnownValueUnionOutput) simpleuniontypes.GetKnownValueUnionOutput {

	// Create a new instance of KnownValueUnionMemberValue
    knownValueUnion := &simpleuniontypes.KnownValueUnionMemberValue{
        Value: 42,
    }

    // Create a new instance of GetKnownValueUnionOutput
    output := simpleuniontypes.GetKnownValueUnionOutput{
        Union: knownValueUnion,
    }

    return output

}

func CollectionOfErrors_Output_FromDafny(dafnyOutput simpleunioninternaldafnytypes.Error) simpleuniontypes.CollectionOfErrors {
	listOfErrors := dafnyOutput.Dtor_list()
	message := dafnyOutput.Dtor_message()
	t := simpleuniontypes.CollectionOfErrors{}
	for i := dafny.Iterate(listOfErrors); ; {
		val, ok := i()
		if !ok {
			break
		}
		err := val.(simpleunioninternaldafnytypes.Error)
		t.ListOfErrors = append(t.ListOfErrors, Error_FromDafny(err))

	}
	t.Message = func() string {
		var s string
		for i := dafny.Iterate(message); ; {
			val, ok := i()
			if !ok {
				return s
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
	return t
}
func OpaqueError_Output_FromDafny(dafnyOutput simpleunioninternaldafnytypes.Error) simpleuniontypes.OpaqueError {
	return simpleuniontypes.OpaqueError{
		ErrObject: dafnyOutput.Dtor_obj(),
	}
}

func Error_FromDafny(err simpleunioninternaldafnytypes.Error) error {
	// Service Errors

	//DependentErrors

	//Unmodelled Errors
	if err.Is_CollectionOfErrors() {
		return CollectionOfErrors_Output_FromDafny(err)
	}

	return OpaqueError_Output_FromDafny(err)
}

func SimpleUnionConfig_FromDafny(dafnyOutput simpleunioninternaldafnytypes.SimpleUnionConfig) simpleuniontypes.SimpleUnionConfig {
	return simpleuniontypes.SimpleUnionConfig{}

}
