// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleuniontypes

type GetKnownValueUnionInput struct {
	Union KnownValueUnion
}

func (input GetKnownValueUnionInput) Validate() error {
	return nil
}

type GetKnownValueUnionOutput struct {
	Union KnownValueUnion
}

func (input GetKnownValueUnionOutput) Validate() error {
	return nil
}

type GetUnionInput struct {
	Union MyUnion
}

func (input GetUnionInput) Validate() error {
	return nil
}

type GetUnionOutput struct {
	Union MyUnion
}

func (input GetUnionOutput) Validate() error {
	return nil
}

type SimpleUnionConfig struct {
}

func (input SimpleUnionConfig) Validate() error {
	return nil
}

// MyUnionMemberIntegerValue
// MyUnionMemberStringValue
type MyUnion interface {
	isMyUnion()
}

type MyUnionMemberIntegerValue struct {
	Value int32
}

func (*MyUnionMemberIntegerValue) isMyUnion() {}

type MyUnionMemberStringValue struct {
	Value string
}

func (*MyUnionMemberStringValue) isMyUnion() {}

// KnownValueUnionMemberValue
type KnownValueUnion interface {
	isKnownValueUnion()
}

type KnownValueUnionMemberValue struct {
	Value int32
}

func (*KnownValueUnionMemberValue) isKnownValueUnion() {}

type SimpleUnionBaseException interface {
	// This is a dummy method to allow type assertion since Go empty interfaces
	// aren't useful for type assertion checks. No concrete class is expected to implement
	// this method. This is also not exported.
	interfaceBindingMethod()
}
