// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleunioninternaldafnywrapped

import (
	"context"

	"github.com/Smithy-dafny/TestModels/Union/simpleunion"
	"github.com/Smithy-dafny/TestModels/Union/simpleunioninternaldafnytypes"
	"github.com/dafny-lang/DafnyStandardLibGo/Wrappers"
)

type Shim struct {
	simpleunioninternaldafnytypes.ISimpleUnionClient
	client *simpleunion.Client
}

func WrappedSimpleUnion(inputConfig simpleunioninternaldafnytypes.SimpleUnionConfig) Wrappers.Result {
	var nativeConfig = simpleunion.SimpleUnionConfig_FromDafny(inputConfig)
	var nativeClient, nativeError = simpleunion.NewClient(nativeConfig)
	if nativeError != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpleunioninternaldafnytypes.Companion_Error_.Create_Opaque_(nativeError))
	}
	return Wrappers.Companion_Result_.Create_Success_(&Shim{client: nativeClient})
}

func (shim *Shim) GetUnion(input simpleunioninternaldafnytypes.GetUnionInput) Wrappers.Result {
	var native_request = simpleunion.GetUnionInput_FromDafny(input)
	var native_response, native_error = shim.client.GetUnion(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpleunion.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpleunion.GetUnionOutput_ToDafny(*native_response))
}

func (shim *Shim) GetKnownValueUnion(input simpleunioninternaldafnytypes.GetKnownValueUnionInput) Wrappers.Result {
	var native_request = simpleunion.GetKnownValueUnionInput_FromDafny(input)
	var native_response, native_error = shim.client.GetKnownValueUnion(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpleunion.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpleunion.GetKnownValueUnionOutput_ToDafny(*native_response))
}
