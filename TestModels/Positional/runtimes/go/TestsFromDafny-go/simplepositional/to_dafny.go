// Code generated by smithy-go-codegen DO NOT EDIT.

package simplepositional

import (
	"github.com/Smithy-dafny/TestModels/Positional/simplepositionalinternaldafnytypes"
	"github.com/Smithy-dafny/TestModels/Positional/simplepositionaltypes"
	"github.com/dafny-lang/DafnyRuntimeGo/dafny"
)

func GetResourceInput_ToDafny(nativeInput simplepositionaltypes.GetResourceInput) simplepositionalinternaldafnytypes.GetResourceInput {

	return func() simplepositionalinternaldafnytypes.GetResourceInput {

		return simplepositionalinternaldafnytypes.Companion_GetResourceInput_.Create_GetResourceInput_(func() dafny.Sequence {
			if nativeInput.Name == nil {
				return nil
			}
			return dafny.SeqOfChars([]dafny.Char(*nativeInput.Name)...)
		}())
	}()

}

func GetResourceOutput_ToDafny(nativeOutput simplepositionaltypes.GetResourceOutput) simplepositionalinternaldafnytypes.GetResourceOutput {

	return func() simplepositionalinternaldafnytypes.GetResourceOutput {

		return simplepositionalinternaldafnytypes.Companion_GetResourceOutput_.Create_GetResourceOutput_(SimpleResource_ToDafny(nativeOutput.Output))
	}()

}

func GetResourcePositionalInput_ToDafny(nativeInput simplepositionaltypes.GetResourcePositionalInput) simplepositionalinternaldafnytypes.GetResourcePositionalInput {

	return func() simplepositionalinternaldafnytypes.GetResourcePositionalInput {

		return simplepositionalinternaldafnytypes.Companion_GetResourcePositionalInput_.Create_GetResourcePositionalInput_(func() dafny.Sequence {
			if nativeInput.Name == nil {
				return nil
			}
			return dafny.SeqOfChars([]dafny.Char(*nativeInput.Name)...)
		}())
	}()

}

func GetResourcePositionalOutput_ToDafny(nativeOutput simplepositionaltypes.GetResourcePositionalOutput) simplepositionalinternaldafnytypes.GetResourcePositionalOutput {

	return func() simplepositionalinternaldafnytypes.GetResourcePositionalOutput {

		return simplepositionalinternaldafnytypes.Companion_GetResourcePositionalOutput_.Create_GetResourcePositionalOutput_(SimpleResource_ToDafny(nativeOutput.Output))
	}()

}

func GetNameInput_ToDafny(nativeInput simplepositionaltypes.GetNameInput) simplepositionalinternaldafnytypes.GetNameInput {

	return func() simplepositionalinternaldafnytypes.GetNameInput {

		return simplepositionalinternaldafnytypes.Companion_GetNameInput_.Create_GetNameInput_()
	}()

}

func GetNameOutput_ToDafny(nativeOutput simplepositionaltypes.GetNameOutput) simplepositionalinternaldafnytypes.GetNameOutput {

	return func() simplepositionalinternaldafnytypes.GetNameOutput {

		return simplepositionalinternaldafnytypes.Companion_GetNameOutput_.Create_GetNameOutput_(func() dafny.Sequence {
			if nativeOutput.Name == nil {
				return nil
			}
			return dafny.SeqOfChars([]dafny.Char(*nativeOutput.Name)...)
		}())
	}()

}

func SimpleResource_ToDafny(nativeResource simplepositionaltypes.ISimpleResource) simplepositionalinternaldafnytypes.ISimpleResource {
	return nativeResource.(*SimpleResource).Impl

}

func SimplePositionalException_ToDafny(nativeInput simplepositionaltypes.SimplePositionalException) simplepositionalinternaldafnytypes.Error {
	return func() simplepositionalinternaldafnytypes.Error {

		return simplepositionalinternaldafnytypes.Companion_Error_.Create_SimplePositionalException_(func() dafny.Sequence {
			if nativeInput.Message == nil {
				return nil
			}
			return dafny.SeqOfChars([]dafny.Char(*nativeInput.Message)...)
		}())
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput simplepositionaltypes.CollectionOfErrors) simplepositionalinternaldafnytypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		e = append(e, Error_ToDafny(i2))
	}
	return simplepositionalinternaldafnytypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), dafny.SeqOfChars([]dafny.Char(nativeInput.Message)...))
}
func OpaqueError_Input_ToDafny(nativeInput simplepositionaltypes.OpaqueError) simplepositionalinternaldafnytypes.Error {
	return simplepositionalinternaldafnytypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func Error_ToDafny(err error) simplepositionalinternaldafnytypes.Error {
	switch err.(type) {
	// Service Errors
	case simplepositionaltypes.SimplePositionalException:
		return SimplePositionalException_ToDafny(err.(simplepositionaltypes.SimplePositionalException))

	//DependentErrors

	//Unmodelled Errors
	case simplepositionaltypes.CollectionOfErrors:
		return CollectionOfErrors_Input_ToDafny(err.(simplepositionaltypes.CollectionOfErrors))

	default:
		// TODO: Is changing from the commented code to this new one reasonable?
		// return OpaqueError_Input_ToDafny(err.(*simpleconstraintstypes.OpaqueError))

		// TODO: why is err a pointer?
		error, ok := err.(*simplepositionaltypes.OpaqueError)

		if !ok {
			panic("Error is not an OpaqueError")
		}
		if error == nil {
			panic("Error is nil")
		}
		return OpaqueError_Input_ToDafny(*error)
	}
}

func SimplePositionalConfig_ToDafny(nativeInput simplepositionaltypes.SimplePositionalConfig) simplepositionalinternaldafnytypes.SimplePositionalConfig {
	return func() simplepositionalinternaldafnytypes.SimplePositionalConfig {

		return simplepositionalinternaldafnytypes.Companion_SimplePositionalConfig_.Create_SimplePositionalConfig_()
	}()

}
