// Code generated by smithy-go-codegen DO NOT EDIT.

package simpletypesinteger

import (
	"Wrappers"
	"dafny"
	"simpletypesintegerinternaldafnytypes"
	"types"
)

func GetInteger_Input_ToDafny(nativeInput types.GetIntegerInput) simpletypesintegerinternaldafnytypes.GetIntegerInput {

	return func() simpletypesintegerinternaldafnytypes.GetIntegerInput {

		return simpletypesintegerinternaldafnytypes.Companion_GetIntegerInput_.Create_GetIntegerInput_(func() Wrappers.Option {
			if nativeInput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(*nativeInput.Value)
		}())
	}()

}

func GetInteger_Output_ToDafny(nativeOutput types.GetIntegerOutput) simpletypesintegerinternaldafnytypes.GetIntegerOutput {

	return func() simpletypesintegerinternaldafnytypes.GetIntegerOutput {

		return simpletypesintegerinternaldafnytypes.Companion_GetIntegerOutput_.Create_GetIntegerOutput_(func() Wrappers.Option {
			if nativeOutput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(*nativeOutput.Value)
		}())
	}()

}

func GetIntegerKnownValueTest_Input_ToDafny(nativeInput types.GetIntegerInput) simpletypesintegerinternaldafnytypes.GetIntegerInput {

	return func() simpletypesintegerinternaldafnytypes.GetIntegerInput {

		return simpletypesintegerinternaldafnytypes.Companion_GetIntegerInput_.Create_GetIntegerInput_(func() Wrappers.Option {
			if nativeInput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(*nativeInput.Value)
		}())
	}()

}

func GetIntegerKnownValueTest_Output_ToDafny(nativeOutput types.GetIntegerOutput) simpletypesintegerinternaldafnytypes.GetIntegerOutput {

	return func() simpletypesintegerinternaldafnytypes.GetIntegerOutput {

		return simpletypesintegerinternaldafnytypes.Companion_GetIntegerOutput_.Create_GetIntegerOutput_(func() Wrappers.Option {
			if nativeOutput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(*nativeOutput.Value)
		}())
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput types.CollectionOfErrors) simpletypesintegerinternaldafnytypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		switch i2.(type) {

		case types.CollectionOfErrors:
			e = append(e, CollectionOfErrors_Input_ToDafny(i2.(types.CollectionOfErrors)))
		default:
			e = append(e, OpaqueError_Input_ToDafny(i2.(types.OpaqueError)))
		}
	}
	return simpletypesintegerinternaldafnytypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), dafny.SeqOfChars([]dafny.Char(nativeInput.Message)...))
}
func OpaqueError_Input_ToDafny(nativeInput types.OpaqueError) simpletypesintegerinternaldafnytypes.Error {
	return simpletypesintegerinternaldafnytypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func SimpleIntegerConfig_Input_ToDafny(nativeInput types.SimpleIntegerConfig) simpletypesintegerinternaldafnytypes.SimpleIntegerConfig {
	return func() simpletypesintegerinternaldafnytypes.SimpleIntegerConfig {

		return simpletypesintegerinternaldafnytypes.Companion_SimpleIntegerConfig_.Create_SimpleIntegerConfig_()
	}()

}
