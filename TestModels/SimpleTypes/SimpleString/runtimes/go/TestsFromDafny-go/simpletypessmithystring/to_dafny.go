// Code generated by smithy-go-codegen DO NOT EDIT.

package simpletypessmithystring

import (
	"github.com/Smithy-dafny/TestModels/SimpleTypes/SimpleString/simpletypessmithystringinternaldafnytypes"
	"github.com/Smithy-dafny/TestModels/SimpleTypes/SimpleString/simpletypessmithystringtypes"
	"github.com/dafny-lang/DafnyRuntimeGo/dafny"
	"github.com/dafny-lang/DafnyStandardLibGo/Wrappers"
)

func GetStringInput_ToDafny(nativeInput simpletypessmithystringtypes.GetStringInput) simpletypessmithystringinternaldafnytypes.GetStringInput {

	return func() simpletypessmithystringinternaldafnytypes.GetStringInput {

		return simpletypessmithystringinternaldafnytypes.Companion_GetStringInput_.Create_GetStringInput_(func() Wrappers.Option {
			if nativeInput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*nativeInput.Value)...))
		}())
	}()

}

func GetStringOutput_ToDafny(nativeOutput simpletypessmithystringtypes.GetStringOutput) simpletypessmithystringinternaldafnytypes.GetStringOutput {

	return func() simpletypessmithystringinternaldafnytypes.GetStringOutput {

		return simpletypessmithystringinternaldafnytypes.Companion_GetStringOutput_.Create_GetStringOutput_(func() Wrappers.Option {
			if nativeOutput.Value == nil {
				return Wrappers.Companion_Option_.Create_None_()
			}
			return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*nativeOutput.Value)...))
		}())
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput simpletypessmithystringtypes.CollectionOfErrors) simpletypessmithystringinternaldafnytypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		e = append(e, Error_ToDafny(i2))
	}
	return simpletypessmithystringinternaldafnytypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), dafny.SeqOfChars([]dafny.Char(nativeInput.Message)...))
}
func OpaqueError_Input_ToDafny(nativeInput simpletypessmithystringtypes.OpaqueError) simpletypessmithystringinternaldafnytypes.Error {
	return simpletypessmithystringinternaldafnytypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func Error_ToDafny(err error) simpletypessmithystringinternaldafnytypes.Error {
	switch err.(type) {
	// Service Errors

	//DependentErrors

	//Unmodelled Errors
	case simpletypessmithystringtypes.CollectionOfErrors:
		return CollectionOfErrors_Input_ToDafny(err.(simpletypessmithystringtypes.CollectionOfErrors))

	default:
		// TODO: Is changing from the commented code to this new one reasonable?
		// return OpaqueError_Input_ToDafny(err.(*simpleconstraintstypes.OpaqueError))

		// TODO: why is err a pointer?
		error, ok := err.(*simpletypessmithystringtypes.OpaqueError)

		if !ok {
			panic("Error is not an OpaqueError")
		}
		if error == nil {
			panic("Error is nil")
		}
		return OpaqueError_Input_ToDafny(*error)
	}
}

func SimpleStringConfig_ToDafny(nativeInput simpletypessmithystringtypes.SimpleStringConfig) simpletypessmithystringinternaldafnytypes.SimpleStringConfig {
	return func() simpletypessmithystringinternaldafnytypes.SimpleStringConfig {

		return simpletypessmithystringinternaldafnytypes.Companion_SimpleStringConfig_.Create_SimpleStringConfig_()
	}()

}
